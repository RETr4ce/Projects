import pefile
import binascii
import struct
from Crypto.Cipher import ARC4
import re

exe_path = "qwerty"
pe = pefile.PE(exe_path)

"""
Configuration stored in .bss section and is RC4 encrypted. 
First 8 bytes is lenght the lengt of the key. In little Endian.
Example first 8 bytes: 0x32 0x00 0x00 0x00 => 0x00000032 => 50 bytes in Decimal
The config data is stored with Unicode/Wide encoding

created somewhere back in 2019ish
"""


bss = [section.get_data() for section in pe.sections if ".bss" in section.Name.decode('ascii')][0]

lenght = struct.unpack("<4H", bss[:8])
key = bss[4: (lenght[0] + 4)]
cipher = ARC4.new(key)
config = cipher.decrypt(bss[54:])
config_parts = config.split(b"\x00\x00")



print('[*] Warzone RAT decrypter\n'
	  '[-] Key: {}\n'
	  '[-] C2 Host: {}\n'
	  '[-] C2 Port: {}\n'
	  ''.format(binascii.hexlify(key), 
	  			config_parts[1].decode("ascii", errors='ignore')[:-2],
	  			*struct.unpack('<H',config_parts[1][-2:])))
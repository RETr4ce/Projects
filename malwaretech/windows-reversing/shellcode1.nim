# Ghidra decompiler code. Shellcode1.
#
#                     LAB_0040406d                                    XREF[1]:     00404072(j)  
# 0040406d c0 44 0f        ROL        byte ptr [EDI + ECX*0x1 + -0x1],0x5
#          ff 05
# 00404072 e2 f9           LOOP       LAB_0040406d

# do {
#   pbVar1 = (byte *)(iVar2 + -1 + iVar3);
#   *pbVar1 = *pbVar1 << 5 | *pbVar1 >> 3;
#   iVar3 = iVar3 + -1;
# } while (iVar3 != 0);

# A UINT8 is an 8-bit unsigned integer (range: 0 through 255 decimal). u8

# https://www.malwaretech.com/challenges/windows-reversing/shellcode1

import strformat

let shellCode = [
            0x32, 0x62, 0x0A, 0x3A, 0xDB, 0x9A, 0x42, 0x2A, 0x62, 0x62, 0x1A,
            0x7A, 0x22, 0x2A, 0x69, 0x4A, 0x9A, 0x72, 0xA2, 0x69, 0x52, 0xAA,
            0x9A, 0xA2, 0x69, 0x32, 0x7A, 0x92, 0x69, 0x2A, 0xC2, 0x82, 0x62,
            0x7A, 0x4A, 0xA2, 0x9A, 0xEB
          ]
var flag = ""

for pbVar1 in shellCode:

  let 
    rotations = 5
    u8 = 8 - rotations                        # ShellCode is a uint8. You can add 'u8 to 0x32. E.g 0x32'u8
    shiftLeft = pbVar1.uint8 shl rotations
    shiftRight = pbVar1.uint8 shr u8          # uint8 - rotations = 3
    c = chr(shiftLeft + shiftRight)           # *pbVar1 = *pbVar1 << 5 | *pbVar1 >> 3;
  flag &= c
echo(fmt"The flag is: {flag}")